# -*- coding: utf-8 -*-
"""expression_detection.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1G_ccvikSJS-cqWToGgBQ2NYSG_RCtMdF
"""

pip install opencv-python tensorflow fer

import cv2
from fer import FER

# Initialize the emotion detector
emotion_detector = FER()

# Start video capture from webcam
cap = cv2.VideoCapture(0)

while True:
    # Capture frame-by-frame
    ret, frame = cap.read()
    if not ret:
        break

    # Convert to grayscale for face detection
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)

    # Detect emotions in the frame
    result = emotion_detector.detect_emotions(frame)

    # Draw bounding boxes and labels on detected faces
    for face in result:
        (x, y, w, h) = face["box"]
        emotions = face["emotions"]

        # Draw rectangle around the face
        cv2.rectangle(frame, (x, y), (x + w, y + h), (255, 0, 0), 2)

        # Get the emotion with the highest score
        emotion, score = max(emotions.items(), key=lambda item: item[1])

        # Display the emotion on the image
        cv2.putText(frame, f"{emotion} ({score:.2f})", (x, y - 10),
                    cv2.FONT_HERSHEY_SIMPLEX, 0.6, (0, 255, 0), 2)

    # Display the resulting frame
    cv2.imshow("Facial Expression Detection", frame)

    # Break loop on 'q' key press
    if cv2.waitKey(1) & 0xFF == ord("q"):
        break


import warnings
warnings.filterwarnings("ignore", category=SyntaxWarning, message="\"is\" with a literal")

# Release the capture and close windows
cap.release()
cv2.destroyAllWindows()

